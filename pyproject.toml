[tool.poetry]
name = "set_loglevel"
version = "0.1.3a0"
description = "Return a loglevel (10, 20, etc.) taking ENV LOGLEVEL into account"
authors = ["ffreemt"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/ffreemt/set-loglevel"

[tool.poetry.dependencies]
python = "^3.8.3"
environs = "^9.5.0"
loguru = "^0.7.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.278"
flake8 = "^6.0.0"
poethepoet = "^0.21.1"
pytest = "^7.4.0"

[tool.poe.executor]
type = "poetry"

[tool.poe.tasks]
memo = "echo poe test"
test = "pytest tests"
build = "poetry build"
_publish = "poetry publish"
release = ["test", "build", "_publish"]
lint = { cmd = "pylint set_loglevel" }
format = "black tests set_loglevel"
docstyle = "pydocstyle --convention=google tests set_loglevel"
tunnel = {cmd = "ssh -CN ip_or_hostname_defined_in_hosts -L 9091:127.0.0.1:9091"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --doctest-modules"
log_cli = true
testpaths = [
    "tests",
    # "integration",
]

[tool.black]
skip-string-normalization = 0

[tool.isort]
profile = "black"
multi_line_output = 3
